buildscript {
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'application'
}

group 'raid.neuroide'
version '1.0-SNAPSHOT'
mainClassName = "io.ktor.server.netty.EngineMain"

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.github.Web-networks:reproto:4ad9a8c0f6e541d7813f28b291b93e4044e6758a"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    implementation "org.xerial:sqlite-jdbc:3.30.1"

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-common"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "com.h2database:h2:1.4.200"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"

    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

task fatJar(type: Jar) {
    archiveClassifier.set("all")
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}
